'use client';

import { useState, useEffect } from 'react';
import Link from 'next/link';
import Image from 'next/image';
import './csr.css';

type Photo = {
  albumId: number;
  id: number;
  title: string;
  url: string;
  thumbnailUrl: string;
};

export default function CSRPage() {
  const [currentTime, setCurrentTime] = useState<string>('');
  const [counter, setCounter] = useState<number>(0);
  const [isLoading, setIsLoading] = useState(true);
  const [photos, setPhotos] = useState<Photo[]>([]);
  const [loadingPhotos, setLoadingPhotos] = useState(false);

  useEffect(() => {
    setIsLoading(false);
    setCurrentTime(new Date().toISOString());

    const interval = setInterval(() => {
      setCurrentTime(new Date().toISOString());
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  const loadPhotos = async () => {
    setLoadingPhotos(true);
    try {
      const response = await fetch('https://jsonplaceholder.typicode.com/photos?_limit=6');
      const data = await response.json();
      setPhotos(data);
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ:', error);
    } finally {
      setLoadingPhotos(false);
    }
  };

  if (isLoading) {
    return (
      <div className="loading-container">
        <div className="loading-content">
          <div className="spinner"></div>
          <p style={{ fontSize: '1.25rem', color: '#7c2d12' }}>–ó–∞–≥—Ä—É–∑–∫–∞...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="csr-page">
      <div className="csr-container">
        <div className="style-badge">
          üé® –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è: –û–±—ã—á–Ω—ã–π CSS —Ñ–∞–π–ª
        </div>
        <h1 className="csr-title">
          CSR - Client-Side Rendering
        </h1>
        
        <div className="bg-orange-50 dark:bg-orange-900/20 border border-orange-200 dark:border-orange-800 rounded-lg p-6 mb-6">
          <h2 className="text-2xl font-semibold mb-3">–ß—Ç–æ —Ç–∞–∫–æ–µ CSR?</h2>
          <p className="mb-4">
            Client-Side Rendering - —ç—Ç–æ –º–µ—Ç–æ–¥ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º JavaScript 
            –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã. 
            –°–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π HTML, –∞ –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏ 
            —Ä–µ–Ω–¥–µ—Ä–∏—Ç—Å—è –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ.
          </p>
          
          <div className="space-y-2">
            <h3 className="font-semibold text-lg">–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞:</h3>
            <ul className="list-disc list-inside space-y-1 ml-2">
              <li>–ë—ã—Å—Ç—Ä—ã–µ –ø–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏</li>
              <li>–ë–æ–≥–∞—Ç—ã–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ UI</li>
              <li>SPA (Single Page Application)</li>
              <li>–†–µ–∞–ª—Ç–∞–π–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–µ–∑ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏</li>
            </ul>
          </div>
        </div>

        <div className="card">
          <div className="card-header">
            <span>‚ö°</span> –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
          </div>
          
          <div className="timer-display">
            <p className="timer-label">–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è:</p>
            <p className="timer-value">{currentTime}</p>
            <p style={{ fontSize: '0.75rem', color: '#7c2d12', marginTop: '0.5rem' }}>
              –û–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
            </p>
          </div>

          <div className="counter-container">
            <h3 style={{ fontWeight: 600, marginBottom: '1rem', color: '#1e3a8a' }}>
              –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Å—á—ë—Ç—á–∏–∫:
            </h3>
            <div className="counter-controls">
              <button
                onClick={() => setCounter(counter - 1)}
                className="counter-button"
              >
                -
              </button>
              <span className="counter-display">
                {counter}
              </span>
              <button
                onClick={() => setCounter(counter + 1)}
                className="counter-button increment"
              >
                +
              </button>
            </div>
            <button
              onClick={() => setCounter(0)}
              className="reset-button"
            >
              –°–±—Ä–æ—Å–∏—Ç—å
            </button>
          </div>
        </div>

        <div className="photos-container fade-in">
          <div className="card-header">
            –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ API –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ
          </div>
          <p style={{ fontSize: '0.875rem', color: '#0c4a6e', marginBottom: '1rem' }}>
            –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ –∏–∑ JSONPlaceholder API –ø—Ä—è–º–æ –≤ –±—Ä–∞—É–∑–µ—Ä–µ!
          </p>
          
          <button
            onClick={loadPhotos}
            disabled={loadingPhotos}
            className="load-button"
          >
            {loadingPhotos ? '‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...' : photos.length > 0 ? 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ç–æ' : 'üì∏ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ'}
          </button>

          {photos.length > 0 && (
            <div className="fade-in">
              <div className="photo-grid">
                {photos.map((photo) => (
                  <div key={photo.id} className="photo-item">
                    <Image 
                      src={photo.thumbnailUrl} 
                      alt={photo.title}
                      width={150}
                      height={150}
                      className="photo-img"
                      unoptimized
                    />
                    <p className="photo-title">
                      {photo.title}
                    </p>
                  </div>
                ))}
              </div>
              <div className="text-xs text-gray-600 dark:text-gray-400 bg-yellow-50 dark:bg-yellow-900/20 p-3 rounded">
                 –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞. –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è 
                –Ω–∞ –∫–ª–∏–µ–Ω—Ç–µ, –∞ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!
              </div>
              <div className="text-xs font-mono bg-gray-100 dark:bg-gray-900 p-3 rounded">
                <strong>–ö–æ–¥:</strong><br/>
                const response = await fetch(&apos;https://jsonplaceholder.typicode.com/photos&apos;);<br/>
                const data = await response.json();<br/>
                setPhotos(data);
              </div>
            </div>
          )}
        </div>

        <div className="bg-yellow-50 dark:bg-yellow-900/20 border border-yellow-200 dark:border-yellow-800 rounded-lg p-6 mb-6">
          <h2 className="text-xl font-semibold mb-3">–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å CSR?</h2>
          <ul className="list-disc list-inside space-y-2 ml-2">
            <li>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–µ –ø–∞–Ω–µ–ª–∏ –∏ –¥–∞—à–±–æ—Ä–¥—ã</li>
            <li>–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç—Ä–µ–±—É—é—â–∏–µ —á–∞—Å—Ç—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π UI</li>
            <li>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–∞—Ä—Ç—ã –∏ –≥—Ä–∞—Ñ–∏–∫–∏</li>
            <li>–ß–∞—Ç—ã –∏ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä—ã</li>
            <li>–°—Ç—Ä–∞–Ω–∏—Ü—ã, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏–µ SEO (–∑–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π)</li>
          </ul>
        </div>

        <div className="bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-6">
          <h2 className="text-xl font-semibold mb-3">–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏</h2>
          <ul className="list-disc list-inside space-y-2 ml-2">
            <li>–ú–µ–¥–ª–µ–Ω–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ (–Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –≤–µ—Å—å JS)</li>
            <li>–ü—Ä–æ–±–ª–µ–º—ã —Å SEO (–ø–æ–∏—Å–∫–æ–≤–∏–∫–∏ –º–æ–≥—É—Ç –Ω–µ –≤–∏–¥–µ—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç)</li>
            <li>–¢—Ä–µ–±—É–µ—Ç —Ö–æ—Ä–æ—à–µ–≥–æ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è</li>
            <li>–£–≤–µ–ª–∏—á–µ–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –±–∞—Ç–∞—Ä–µ–∏ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö</li>
          </ul>
        </div>

        <div style={{ textAlign: 'center' }}>
          <Link href="/" className="back-link">
            ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </Link>
        </div>
      </div>
    </div>
  );
}
